module.exports = { contents: "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.loadFontGroup = exports.loadFont = undefined;\n\nrequire('promis');\n\nvar _fontfaceobserver = require('fontfaceobserver');\n\nvar _fontfaceobserver2 = _interopRequireDefault(_fontfaceobserver);\n\nvar _dom = require('./dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar htmlEl = document.documentElement;\nvar TIMEOUT = 5000;\n\nfunction addFont(_ref) {\n\tvar family = _ref.family;\n\n\tvar name = family.toLowerCase().replace(/ /g, '-');\n\tvar className = 'loaded-' + name;\n\t(0, _dom.addClass)(htmlEl, className);\n}\n\nfunction handleError(err) {\n\tconsole.error(err);\n}\n\nfunction loadFont(font) {\n\tvar family = font.family,\n\t    weight = font.weight;\n\n\tvar fontObserver = new _fontfaceobserver2.default(family, { weight: weight });\n\tfontObserver.load(null, TIMEOUT).then(function () {\n\t\treturn addFont(font);\n\t}).catch(handleError);\n}\n\nfunction loadFontGroup(font) {\n\tvar family = font.family,\n\t    weight = font.weight,\n\t    style = font.style,\n\t    parts = font.parts;\n\n\n\tvar promises = parts.map(function (part) {\n\t\tvar fontObserver = new _fontfaceobserver2.default(part, { weight: weight, style: style });\n\t\treturn fontObserver.load(null, TIMEOUT);\n\t});\n\n\tPromise.all(promises).then(function () {\n\t\treturn addFont({ family: family, weight: weight });\n\t}).catch(handleError);\n}\n\nexports.loadFont = loadFont;\nexports.loadFontGroup = loadFontGroup;",
dependencies: ["promis","fontfaceobserver","./dom"],
sourceMap: "{\"version\":3,\"sources\":[\"utils/load-font.js\"],\"names\":[\"htmlEl\",\"document\",\"documentElement\",\"TIMEOUT\",\"addFont\",\"family\",\"name\",\"toLowerCase\",\"replace\",\"className\",\"handleError\",\"err\",\"console\",\"error\",\"loadFont\",\"font\",\"weight\",\"fontObserver\",\"load\",\"then\",\"catch\",\"loadFontGroup\",\"style\",\"parts\",\"promises\",\"map\",\"part\",\"Promise\",\"all\"],\"mappings\":\";;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,SAASC,eAAxB;AACA,IAAMC,UAAU,IAAhB;;AAEA,SAASC,OAAT,OAA6B;AAAA,KAAVC,MAAU,QAAVA,MAAU;;AAC5B,KAAMC,OAAOD,OAAOE,WAAP,GAAqBC,OAArB,CAA6B,IAA7B,EAAmC,GAAnC,CAAb;AACA,KAAMC,wBAAsBH,IAA5B;AACA,oBAASN,MAAT,EAAiBS,SAAjB;AACA;;AAED,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACzBC,SAAQC,KAAR,CAAcF,GAAd;AACA;;AAED,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;AAAA,KACfV,MADe,GACIU,IADJ,CACfV,MADe;AAAA,KACPW,MADO,GACID,IADJ,CACPC,MADO;;AAEvB,KAAMC,eAAe,+BAAqBZ,MAArB,EAA6B,EAAEW,cAAF,EAA7B,CAArB;AACAC,cACEC,IADF,CACO,IADP,EACaf,OADb,EAEEgB,IAFF,CAEO;AAAA,SAAMf,QAAQW,IAAR,CAAN;AAAA,EAFP,EAGEK,KAHF,CAGQV,WAHR;AAIA;;AAED,SAASW,aAAT,CAAuBN,IAAvB,EAA6B;AAAA,KACpBV,MADoB,GACaU,IADb,CACpBV,MADoB;AAAA,KACZW,MADY,GACaD,IADb,CACZC,MADY;AAAA,KACJM,KADI,GACaP,IADb,CACJO,KADI;AAAA,KACGC,KADH,GACaR,IADb,CACGQ,KADH;;;AAG5B,KAAMC,WAAWD,MAAME,GAAN,CAAU,UAACC,IAAD,EAAU;AACpC,MAAMT,eAAe,+BAAqBS,IAArB,EAA2B,EAAEV,cAAF,EAAUM,YAAV,EAA3B,CAArB;AACA,SAAOL,aACLC,IADK,CACA,IADA,EACMf,OADN,CAAP;AAEA,EAJgB,CAAjB;;AAMAwB,SAAQC,GAAR,CAAYJ,QAAZ,EACEL,IADF,CACO;AAAA,SAAMf,QAAQ,EAAEC,cAAF,EAAUW,cAAV,EAAR,CAAN;AAAA,EADP,EAEEI,KAFF,CAEQV,WAFR;AAGA;;QAEQI,Q,GAAAA,Q;QAAUO,a,GAAAA,a\",\"file\":\"utils/load-font.js\",\"sourcesContent\":[\"import 'promis'\\nimport FontFaceObserver from 'fontfaceobserver'\\nimport { addClass } from './dom'\\n\\nconst htmlEl = document.documentElement\\nconst TIMEOUT = 5000\\n\\nfunction addFont({ family }) {\\n\\tconst name = family.toLowerCase().replace(/ /g, '-')\\n\\tconst className = `loaded-${name}`\\n\\taddClass(htmlEl, className)\\n}\\n\\nfunction handleError(err) {\\n\\tconsole.error(err)\\n}\\n\\nfunction loadFont(font) {\\n\\tconst { family, weight } = font\\n\\tconst fontObserver = new FontFaceObserver(family, { weight })\\n\\tfontObserver\\n\\t\\t.load(null, TIMEOUT)\\n\\t\\t.then(() => addFont(font))\\n\\t\\t.catch(handleError)\\n}\\n\\nfunction loadFontGroup(font) {\\n\\tconst { family, weight, style, parts } = font\\n\\n\\tconst promises = parts.map((part) => {\\n\\t\\tconst fontObserver = new FontFaceObserver(part, { weight, style })\\n\\t\\treturn fontObserver\\n\\t\\t\\t.load(null, TIMEOUT)\\n\\t})\\n\\n\\tPromise.all(promises)\\n\\t\\t.then(() => addFont({ family, weight }))\\n\\t\\t.catch(handleError)\\n}\\n\\nexport { loadFont, loadFontGroup }\\n\"]}",
headerContent: undefined,
mtime: 1483733630000
};